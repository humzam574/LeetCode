class Solution:
    def nextBeautifulNumber(self, n: int) -> int:
        #6,0
        #5,1
        #4,2
        #3,2,1
        if n == 0:
            return 1
        print(sorted([22333, 23233, 23323, 23332, 32233, 32323, 32332, 33223, 33232, 33322, 14444, 41444, 44144, 44414, 44441, 55555]))

        self.arr = [122, 212, 221, 333, 1333, 3133, 3313, 3331, 4444, 14444, 22333, 23233, 23323, 23332, 32233, 32323, 32332, 33223, 33232, 33322, 41444, 44144, 44414, 44441, 55555, 155555, 515555, 551555, 555155, 555515, 555551, 666666, 1224444]
        def bt(rem, curr):
            if not rem:
                self.arr.append(curr)
            for i in range(len(rem)):
                bt(rem[:i] + rem[i+1:], curr*10 + rem[i])
        bt([1,2,2,3,3,3], 0)
        bt([2, 2, 4, 4, 4, 4], 0)
        #bt([1,2,2,4,4,4,4],0)
        self.arr.sort()
        if n < 22:
            return 22
        
        #5,0 -> 55555
        #4,1 -> 14444, 41444, 44144, 44414, 44441
        #3,2 -> 22333, 23233, 23323, 23332, 32233, 32323, 32332, 33223, 33232, 33322

        #4,0 -> 4444
        #3,1 -> 1333, 3133, 3313, 3331
        
        #3,0 -> 333
        #2,1 -> 122, 221, 212
        #
        if n < 122:
            return 122
        if n < 212:
            return 212
        if n < 221:
            return 221
        if n < 333:
            return 333
        if n < 1333:
            return 1333
        if n < 3133:
            return 3133
        if n < 3313:
            return 3313
        if n < 3331:
            return 3331
        if n < 4444:
            return 4444
        
        for x in self.arr:
            if n < x:
                return x
        
        